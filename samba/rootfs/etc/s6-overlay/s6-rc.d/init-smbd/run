#!/command/with-contenv bashio
# ==============================================================================
# Prepare the Samba service for running
# ==============================================================================
declare password
declare username
declare -a interfaces=()
export HOSTNAME

CONFIG=/data/options.json
# Check Login data
if ! jq -e '.users[0].username' $CONFIG > /dev/null || \
   ! jq -e '.users[0].password' $CONFIG > /dev/null; then
    bashio::exit.nok "At least one user with a username and password must be defined!"
fi

if ! jq -e '.shares[0].share' $CONFIG > /dev/null; then
    bashio::exit.nok "At least one share must be defined!"
fi

# Read hostname from API or setting default "hassio"
HOSTNAME=$(bashio::info.hostname)
if bashio::var.is_empty "${HOSTNAME}"; then
    bashio::log.warning "Can't read hostname, using default."
    HOSTNAME="hassio"
fi
bashio::log.info "Hostname: ${HOSTNAME}"

# Get supported interfaces
for interface in $(bashio::network.interfaces); do
    interfaces+=("${interface}")
done
if [ ${#interfaces[@]} -eq 0 ]; then
    bashio::exit.nok 'No supported interfaces found to bind on.'
fi
bashio::log.info "Interfaces: $(printf '%s ' "${interfaces[@]}")"

# Generate Samba configuration.
jq ".interfaces = $(jq -c -n '$ARGS.positional' --args -- "${interfaces[@]}")" /data/options.json \
    | tempio \
      -template /usr/share/tempio/smb.gtpl \
      -out /etc/samba/smb.conf

# Init user
for i in $(seq $(jq -e '.users | length' $CONFIG)); do
  username=$(jq -e -r ".users[$i-1].username" $CONFIG)
  password=$(jq -e -r ".users[$i-1].password" $CONFIG)
  addgroup "${username}"
  adduser -D -H -G "${username}" -s /bin/false "${username}"
  # shellcheck disable=SC1117
  echo -e "${password}\n${password}" \
      | smbpasswd -a -s -c "/etc/samba/smb.conf" "${username}"
done
